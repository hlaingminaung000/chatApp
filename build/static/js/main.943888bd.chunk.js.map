{"version":3,"sources":["firebase.ts","contexts/UserContext.ts","Components/Chats.tsx","Components/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","UserContext","React","createContext","undefined","Chats","useState","loading","setLoading","user","useContext","navigate","useNavigate","a","signOut","useEffect","axios","get","headers","process","email","uid","then","catch","e","formdata","FormData","append","post","console","log","response","className","onClick","height","projectID","userName","userSecret","Login","signInWithRedirect","GoogleAuthProvider","GoogleOutlined","FacebookAuthProvider","App","setUser","onAuthStateChanged","style","fontFamily","Provider","value","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.943888bd.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\n\r\nexport const auth = firebase\r\n\t.initializeApp({\r\n\t\tapiKey: \"AIzaSyCmNLK_Yp2yR8gqInGoJRSx7riGjkRY4_w\",\r\n\t\tauthDomain: \"chat-app-2c324.firebaseapp.com\",\r\n\t\tprojectId: \"chat-app-2c324\",\r\n\t\tstorageBucket: \"chat-app-2c324.appspot.com\",\r\n\t\tmessagingSenderId: \"774913940465\",\r\n\t\tappId: \"1:774913940465:web:a58229b54224fc00eb4250\",\r\n\t})\r\n\t.auth();\r\n","import React from \"react\";\r\n\r\nexport const UserContext = React.createContext(undefined);\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ChatEngine } from \"react-chat-engine\";\r\nimport axios from \"axios\";\r\n\r\nimport { auth } from \"../firebase\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\n\r\nexport default function Chats() {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst user: any = useContext(UserContext);\r\n\tconst navigate = useNavigate();\r\n\tasync function handleLogout() {\r\n\t\tsetLoading(true);\r\n\t\tawait auth.signOut();\r\n\t\tnavigate(\"/\");\r\n\t}\r\n\t// async function getFile(url) {\r\n\t// \tlet response = await fetch(url);\r\n\t// \tconsole.log(\"response\", response);\r\n\t// \tlet data = await response.blob();\r\n\t// \tconsole.log(\"data\", data);\r\n\t// \tconsole.log(\"c\");\r\n\t// \tconst nothing = new File([data], \"test.jpg\", { type: \"image/jpeg\" });\r\n\t// \tconsole.log(\"nothing\", nothing);\r\n\t// \treturn nothing;\r\n\t// }\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!user || user === null) {\r\n\t\t\tnavigate(\"/\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taxios\r\n\t\t\t.get(\"https://api.chatengine.io/users/me/\", {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"project-id\": process.env.REACT_APP_CHAT_ENGINE_ID as string,\r\n\t\t\t\t\t\"user-name\": user.email,\r\n\t\t\t\t\t\"user-secret\": user.uid,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\r\n\t\t\t.then((a) => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t})\r\n\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tlet formdata = new FormData();\r\n\t\t\t\tformdata.append(\"email\", user.email);\r\n\t\t\t\tformdata.append(\"username\", user.email);\r\n\t\t\t\tformdata.append(\"secret\", user.uid);\r\n\r\n\t\t\t\t// getFile(user.photoURL).then((avatar) => {\r\n\t\t\t\t// \tformdata.append(\"avatar\", avatar, avatar.name);\r\n\t\t\t\t// \tconsole.log(\"avatar\", avatar);\r\n\t\t\t\t// \tconsole.log(\"formdata\", formdata);\r\n\t\t\t\taxios\r\n\t\t\t\t\t.post(\"https://api.chatengine.io/users/\", formdata, {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\"private-key\": process.env.REACT_APP_CHAT_ENGINE_KEY as string,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => console.log(\"e\", e.response));\r\n\t\t\t});\r\n\t\t// });\r\n\t}, [user]);\r\n\treturn (\r\n\t\t<div className=\"chats-page\">\r\n\t\t\t{!loading && (\r\n\t\t\t\t<div className=\"nav-bar\">\r\n\t\t\t\t\t<div className=\"logo-tab\">Hlaing Min Aung</div>\r\n\r\n\t\t\t\t\t<div onClick={handleLogout} className=\"logout-tab\">\r\n\t\t\t\t\t\tLogout\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{!loading && (\r\n\t\t\t\t<ChatEngine\r\n\t\t\t\t\theight=\"calc(100vh - 66px)\"\r\n\t\t\t\t\tprojectID={process.env.REACT_APP_CHAT_ENGINE_ID}\r\n\t\t\t\t\tuserName={user.email}\r\n\t\t\t\t\tuserSecret={user.uid}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { GoogleOutlined } from \"@ant-design/icons\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport { auth } from \"../firebase\";\r\n\r\nexport default function Login() {\r\n\treturn (\r\n\t\t<div className=\"login-page\">\r\n\t\t\t<h2 className=\"login-word\">Login</h2>\r\n\t\t\t<div className=\"login-card\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"login-button google\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tauth.signInWithRedirect(new firebase.auth.GoogleAuthProvider());\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<GoogleOutlined /> Sign In with Google\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"login-button facebook\"\r\n\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\tauth.signInWithRedirect(new firebase.auth.FacebookAuthProvider())\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"bi bi-facebook facebook-icon\"></i>Sign In with Facebook\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Chats from \"./Components/Chats\";\nimport Login from \"./Components/Login\";\nimport { UserContext } from \"./contexts/UserContext\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n\tconst [user, setUser] = useState<any>();\n\tconst [loading, setLoading] = useState(true);\n\tconst navigate = useNavigate();\n\tuseEffect(() => {\n\t\tauth.onAuthStateChanged((user) => {\n\t\t\tsetUser(user);\n\t\t\tsetLoading(false);\n\t\t\tconsole.log(\"second\");\n\t\t\tconsole.log(\"userInfo\", user);\n\t\t\tif (user) navigate(\"/chats\");\n\t\t});\n\t\tconsole.log(\"first\");\n\t}, []);\n\treturn (\n\t\t<div style={{ fontFamily: \"Avenir\" }}>\n\t\t\t<UserContext.Provider value={user}>\n\t\t\t\t{!loading && (\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route path=\"/chats\" element={<Chats />} />\n\t\t\t\t\t\t<Route path=\"/\" element={<Login />} />\n\t\t\t\t\t</Routes>\n\t\t\t\t)}\n\t\t\t</UserContext.Provider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}